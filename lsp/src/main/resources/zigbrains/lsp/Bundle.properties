settings.group.title=ZLS Settings
settings.zls-path.label=Executable path
settings.zls-path.tooltip=Path to the ZLS Binary 
settings.zls-path.browse.title=Path to the ZLS Binary
settings.zls-config-path.label=Config path
settings.zls-config-path.tooltip=Leave empty to use built-in config generated from the settings below
settings.zls-config-path.browse.title=Path to the Custom ZLS Config File (Optional)
settings.zls-path.use-direnv.label=Use direnv
settings.inlay-hints-group.label=Inlay Hints
settings.inlay-hints-enable.label=Enable
settings.inlay-hints-enable.tooltip=Toggle this to enable/disable all inlay hints
settings.enable_snippets.label=Enable snippets
settings.enable_snippets.tooltip=Enables snippet completions when the client also supports them
settings.enable_argument_placeholders.label=Enable argument placeholders
settings.enable_argument_placeholders.tooltip=Whether to enable function argument placeholder completions
settings.completion_label_details.label=Completion label details
settings.completion_label_details.tooltip=Whether to show the function signature in completion results. May improve readability in some editors when disabled
settings.enable_build_on_save.label=Enable build on save
settings.enable_build_on_save.tooltip=Whether to enable build-on-save diagnostics. Will be automatically enabled if the `build.zig` has declared a 'check' step.\n\nFor more infromation, checkout the [Build-On-Save](https://zigtools.org/zls/guides/build-on-save/) Guide.
settings.build_on_save_args.label=Build on save args
settings.build_on_save_args.tooltip=Specify which arguments should be passed to Zig when running build-on-save.\n\nIf the `build.zig` has declared a 'check' step, it will be preferred over the default 'install' step.
settings.semantic_tokens.label=Semantic tokens
settings.semantic_tokens.tooltip=Set level of semantic tokens. `partial` only includes information that requires semantic analysis.
settings.inlay_hints_show_variable_type_hints.label=Show variable type hints
settings.inlay_hints_show_variable_type_hints.tooltip=Enable inlay hints for variable types
settings.inlay_hints_show_struct_literal_field_type.label=Show struct literal field type
settings.inlay_hints_show_struct_literal_field_type.tooltip=Enable inlay hints for fields in struct and union literals
settings.inlay_hints_show_parameter_name.label=Show parameter name
settings.inlay_hints_show_parameter_name.tooltip=Enable inlay hints for parameter names
settings.inlay_hints_show_builtin.label=Show builtin
settings.inlay_hints_show_builtin.tooltip=Enable inlay hints for builtin functions
settings.inlay_hints_exclude_single_argument.label=Exclude single argument
settings.inlay_hints_exclude_single_argument.tooltip=Don't show inlay hints for single argument calls
settings.inlay_hints_hide_redundant_param_names.label=Hide redundant param names
settings.inlay_hints_hide_redundant_param_names.tooltip=Hides inlay hints when parameter name matches the identifier (e.g. `foo: foo`)
settings.inlay_hints_hide_redundant_param_names_last_token.label=Hide redundant param names last token
settings.inlay_hints_hide_redundant_param_names_last_token.tooltip=Hides inlay hints when parameter name matches the last token of a parameter node (e.g. `foo: bar.foo`, `foo: &foo`)
settings.warn_style.label=Warn style
settings.warn_style.tooltip=Enables warnings for style guideline mismatches
settings.highlight_global_var_declarations.label=Highlight global var declarations
settings.highlight_global_var_declarations.tooltip=Whether to highlight global var declarations
settings.skip_std_references.label=Skip std references
settings.skip_std_references.tooltip=When true, skips searching for references in the standard library. Improves lookup speed for functions in user's code. Renaming and go-to-definition will continue to work as is
settings.prefer_ast_check_as_child_process.label=Prefer AST check as child process
settings.prefer_ast_check_as_child_process.tooltip=Favor using `zig ast-check` instead of the builtin one
settings.builtin_path.label=Builtin path
settings.builtin_path.tooltip=Override the path to 'builtin' module. Automatically resolved if unset.
settings.build_runner_path.label=Build runner path
settings.build_runner_path.tooltip=Specify a custom build runner to resolve build system information.
settings.global_cache_path.label=Global cache path
settings.global_cache_path.tooltip=Path to a directory that will be used as zig's cache. Will default to `${KnownFolders.Cache}/zls`.
configurable.name.zls.settings=ZLS Settings
notification.group.zigbrains-lsp=ZigBrains LSP Integration
notification.message.could-not-detect.content=Could not detect ZLS binary, please configure it
notification.message.zls-exe-path-invalid.content=ZLS executable path could not be parsed: {0}
notification.message.zls-exe-not-exists.content=ZLS executable does not exist: {0}
notification.message.zls-exe-not-executable.content=ZLS executable is not an executable file: {0}
notification.message.zls-config-not-exists.content=ZLS config file does not exist: {0}
notification.message.zls-config-not-file.content=ZLS config file is not a regular file: {0}
notification.message.zls-config-path-invalid.content=ZLS config path could not be parted: {0}
notification.message.zls-config-autogen-failed.content=Failed to autogenerate ZLS config from toolchain
progress.title.create-connection-provider=Creating ZLS connection provider
progress.title.validate=Validating ZLS
# suppress inspection "UnusedProperty"
lsp.zls.name=Zig Language Server
# suppress inspection "UnusedProperty"
lsp.zls.description=The <a href="https://github.com/Zigtools/ZLS">Zig Language Server</a>, via ZigBrains
